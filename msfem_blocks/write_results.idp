// write_results.idp
//
// //         //          ////////  ////////  //         //
// ////      ///  //////  //        //        ////      ///
// // //    ////  //      //////    //////    // //    ////
// //  //  // //  //////  //        //        //  //  // //
// //   ////  //      //  //        //        //   ////  //
// //    //   //  //////  //        ////////  //    //   //
// Writing solution and errors to external files (all writes appended)
//
//
// Compatible with sequential version only
//
//
// Variables not defined in this script /////////////////////////////////
// - coarseerrors -- (string) decides whether solutions are stored (only if == 0)
// - ffLog -- (ofstream) writes execution log to "log_msfem.txt"
// - useB -- (int) indicates whether bubbles are to be used
// - vfname -- (string) description of (global and local) VF used
// - rhsDescription -- (string) description of the function fRHS
// - stabExpression -- (string) description of the formula used to determine the stabilization coefficient
// - uH -- (VH) P1 solution of the effective problem
// - uB -- (VH0) bubble coefficients computed from the effective problem
// - output -- (string) name of the directory (possibly to be created) where all output will be stored
// - parameters -- (string) parameters tuning the PDE and the MsFEM applied
// - name -- (string) abbreviation for  MsFEM underlying affine space
// - n -- (int) integer related to the coarse mesh discretization
// - osCoef -- (real) the homothety coefficient chosen for the oversampling patch
// - uHh -- (Vh) reconstructed, fine-scale solution (but must be processed during element-per-element reconstruction)
// - (real) eL1, eL2, eH1, eMax         -- errors on the entire domain
// - (real) eML1,  eML2,  eMH1,  eMMax  -- errors OBL according to the definition of Madiot
// - (real) eOL1,  eOL2,  eOH1,  eOMax  -- errors outside the mesh elements at the outflow
// - (real) erL1,  erL2,  erH1,  erMax  -- relative errors on the entire domain
// - (real) erML1, erML2, erMH1, erMMax -- relative errors OBL according to the definition of Madiot
// - (real) erOL1, erOL2, erOH1, erOMax -- relative errors outside the mesh elements at the outflow
////////////////////////////////////////////////////////////////////////


// Saving and writing test results 
if (coarseerrors == 0) {
    {// Saving coarse scale solution
        string solCname = output + "solCoarse_" + name;
        if (name != "REF") solCname = solCname + parameters;
        else solCname = solCname + parametersFine + "_n_" + n;
        solCname = solCname + ".txt";
        ffLog << "Writing solution in P1 basis to " << solCname << endl; 
        ofstream ff(solCname, append);
        ff << uH[] << endl;
        ff << endl;
    }
    if (treatB == "in_system" && name != "REF") {// Saving bubble coefficients
        string solBname = output+"solCoarseB_" + name + parameters;
        solBname = solBname + ".txt";
        ffLog << "Writing coefficients for the bubble functions to " << solBname << endl; 
        ofstream ff(solBname, append);
        ff << uB[] << endl;
        ff << endl;
    }
    if (name != "REF") {// Saving reconstructed micro-scale solution
        string solname = output+"sol_" + name + parameters;
        solname = solname + ".txt";
        ffLog << "Writing reconstructed fine scale solution to " << solname << endl; 
        ofstream ff(solname, append);
        ff << uHh[] << endl;
        ff << endl;
    }
}

{// Writing errors to an external file
    string errname = output + "err";
    if (coarseerrors == 1) errname = errname + "Coarse";
    errname = errname + "_" + vfname + "_" + name + "_OS" + osCoef + ".txt";
    if (name == "REF") {
        errname = output + "err_best_approximation.txt";
    }
    ffLog << "Writing errors to " << errname << endl;
    ofstream ff(errname, append);
    ff  << rhsDescription
        << endl
        << stabExpression
        << endl
        << "\t\t"
        << "n    " << n << "\t\t"
        << "N    " << Ndiscr << "\t\t"
        << "eps  " << eps << "\t\t"
        << "alp  " << alpha << "\t\t"
        << "cont " << cont << "\t\t"
        << "the  " << theta << "\t\t"
        << endl
        << "\t\t"
        << "useB     " << useB << "\t\t"
        << "testMS   " << testMS << "\t\t"
        << "strongD  " << strongDir << "\t\t"
        << "OScoef   " << osCoef << "\t\t"
        << endl
        << "\t\t"
        << "PeGlob   " << PeGlob << "\t\t"
        << "PeLoc    " << PeLoc  << "\t\t"
        << "PeFine   " << PeFine << "\t\t"
        << endl
        << "\t\t L1\t\t\t L2\t\t\t H1\t\t\t max\t\t L1rel\t\t L2rel\t\t H1rel\t\t maxrel\t\t"
        << endl;        
    
    ff  << "all \t"
        << eL1  <<"\t"<< eL2  <<"\t"<< eH1  <<"\t"<< eMax  <<"\t"
        << erL1 <<"\t"<< erL2 <<"\t"<< erH1 <<"\t"<< erMax
        << endl
        << "OBL \t"
        << eML1  <<"\t"<< eML2  <<"\t"<< eMH1  <<"\t"<< eMMax  <<"\t"
        << erML1 <<"\t"<< erML2 <<"\t"<< erMH1 <<"\t"<< erMMax
        << endl
        << "OLME \t"
        << eOL1  <<"\t"<< eOL2  <<"\t"<< eOH1  <<"\t"<< eOMax  <<"\t"
        << erOL1 <<"\t"<< erOL2 <<"\t"<< erOH1 <<"\t"<< erOMax
        << endl;

    ff<<endl;
}

cout << endl;
ffLog << endl << endl; //end of MsFEM routine
