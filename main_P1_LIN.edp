// main_P1_LIN.edp
//
// run with   FreeFem++ main_P1_LIN.edp -o [offline_mode]
//            -o specifies the option for the offline stage: either "compute" (default) or "load"
// The user must ensure at all times that the appropriate mode is used for correct results
//
////// Sequential version //////////////////////////////////////////////

// Initialization
string FEtype = "P1"; //the vffile checks whether it is compatible with the intended FE type (P1 or multiscale)
string bcType = "Lin"; //type of boundary condtitions, relevant for the macroscopic problem
string name = bcType; //abbreviation used for the MsFEM output
// MPI compatibility
string nameMPI = ""; //nothing is added to name later, indicating no usage of parallel code
int iproc=0; //sequential code only uses a single process, which corresponds to the main process
int nbproc=1; 
// The next macro is defined for compatibility with some macros that are loaded for parallel MsFEM,
//  but it should never actually be executed for sequential MsFEM
macro mpiReduce(a,b,c,d) cout << "WARNING: mpiReduce was erroneously called with sequential MsFEM" << endl //EOM 

include "msfem_blocks/init.idp"
assert(strongDir==0);
assert(useB==0);
assert(testMS==0);
assert(offlineMode=="compute");
assert(osCoef < osThr);
fespace VH(TH,P1); //coarse global FE conforming P1 space

// Offline stage
for(int i=0; i<VH0.ndof; i++) 
{
    if (i%(2*n)==0) {cout <<"construction ms coefficients on tri "<<i<<endl;}
    phi[][i]=2; //defined in init.idp -- used to loop over the coarse mesh elements
    mesh K=trunc(Th,phi>1,split=1,label=1); //fine mesh of the coarse mesh element K indicated by phi
    fespace VK(K,P1); //P1 finite element space on the triangle K
    VK Vc=0, Vx=0, Vy=0, B=0, uHx=x-xb[][i], uHy=y-yb[][i];
    VK phi0=1, phix=0, phiy=0; 
    // Compute effective coefficients on K
    offlineEffectiveTensors(K,i,phi0,phix,phiy,uHx,uHy,Vc,Vx,Vy,B)
    if (debug) if (i%(2*n)==0) cout << endl;
    phi[][i]=0;
}
// Send all information for the global problem to the main process
offlineEffectiveTensorsReduce
// Save effective coefficients (for the entire coarse mesh)
// Also save the Vc pattern over all coarse mesh elements
offlineSaveEffectiveTensors

printTime("Offline phase (computing + storing) lasted ")

// Online stage
VH uH=0;
VH0 uB=0; //introduced here only for compatibility with MsFEMs, that can use bubble functions
solveGlobalProblem(uH,uB)

// Post-processing
postReconstructionError(uH,uB) //error computation
postCoarseError(uH) //error computation of projections on the coarse space
