// Small piece of code to compare the fine scale solutions of different testMS options

string outputname = "MsFEM-GalvsGni.dat";

int Ndiscr = 1024;
mesh Th=square(Ndiscr,Ndiscr,[1*x,1*y]);
fespace Vh(Th,P1);
Vh solGal=0, solGni=0;

real[int] nsteps(7);
nsteps = [4, 8, 16, 32, 64, 128, 256];
real eps = 0.020944;

macro computeDifference(i, type, os, diffNorm) {
    string fileGal, fileGni;
    if (os == 0) {
        fileGal = "sol_"+type+"_testMS_1_nB_alpha_1_cont_100_eps_"+eps+"_N_"+Ndiscr+"_n_"+nsteps[i]+".txt";
        fileGni  = "sol_"+type+"_testMS_2_nB_alpha_1_cont_100_eps_"+eps+"_N_"+Ndiscr+"_n_"+nsteps[i]+".txt";
    } else {
        fileGal = "sol_"+type+"_testMS_1_nB_alpha_1_cont_100_eps_"+eps+"_OS_"+os+"_N_"+Ndiscr+"_n_"+nsteps[i]+".txt";
        fileGni  = "sol_"+type+"_testMS_2_nB_alpha_1_cont_100_eps_"+eps+"_OS_"+os+"_N_"+Ndiscr+"_n_"+nsteps[i]+".txt";
    }
    cout << fileGal << "   " << fileGni << endl;
    {
        ifstream ff(fileGal);
        ff >> solGal[];
    }
    {
        ifstream ff(fileGni);
        ff >> solGni[];
    }

    Vh difference = solGal - solGni;
    diffNorm = int2d(Th)(difference*difference + dx(difference)*dx(difference) + dy(difference)*dy(difference));
    diffNorm = sqrt(diffNorm);
}
// EOM

{
ofstream fout(outputname, append);
    fout << "H\t" << "Lin\t" << "LinOS3\t" << "CR\t" << "CROS3" << endl;
    for(int i=0; i<nsteps.n; i++) {
        real diffLin=0;
        computeDifference(i, "Lin_MPI", 0, diffLin)
        real diffLinOS=0;
        computeDifference(i, "LinOSgld_weakDir_MPI", 3, diffLinOS)
        real diffCR=0;
        computeDifference(i, "CR_weakDir_MPI", 0, diffCR)
        real diffCROS=0;
        computeDifference(i, "CROSgld_weakDir_MPI", 3, diffCROS)

        fout << 1./nsteps[i] << "\t" << diffLin << "\t" << diffLinOS << "\t"
                             << diffCR << "\t" << diffCROS << endl;
    }
}

